//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kumano.Data.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REQUEST_ADDCATEGORY", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Request")]
    [System.SerializableAttribute()]
    public partial class REQUEST_ADDCATEGORY : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kumano.Data.Service.DataCategory CatgeoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParentCategoryIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kumano.Data.Service.DataCategory Catgeory {
            get {
                return this.CatgeoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CatgeoryField, value) != true)) {
                    this.CatgeoryField = value;
                    this.RaisePropertyChanged("Catgeory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ParentCategoryId {
            get {
                return this.ParentCategoryIdField;
            }
            set {
                if ((this.ParentCategoryIdField.Equals(value) != true)) {
                    this.ParentCategoryIdField = value;
                    this.RaisePropertyChanged("ParentCategoryId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataCategory", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Serialized")]
    [System.SerializableAttribute()]
    public partial class DataCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kumano.Data.Service.CategoryType CategoryTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHasChildField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public Kumano.Data.Service.CategoryType CategoryTypeCode {
            get {
                return this.CategoryTypeCodeField;
            }
            set {
                if ((this.CategoryTypeCodeField.Equals(value) != true)) {
                    this.CategoryTypeCodeField = value;
                    this.RaisePropertyChanged("CategoryTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsHasChild {
            get {
                return this.IsHasChildField;
            }
            set {
                if ((this.IsHasChildField.Equals(value) != true)) {
                    this.IsHasChildField = value;
                    this.RaisePropertyChanged("IsHasChild");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryType", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Core.Constructions")]
    public enum CategoryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SYSTEM = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SYSTEM_RECYCLE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPLICATION = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSEAPI_BASE", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kumano.Data.Service.RESPONSE_FINDARTIFACT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kumano.Data.Service.RESPONSE_GETSERVERVERSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kumano.Data.Service.RESPONSE_LOADCATGEORY))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kumano.Data.Service.RESPONSE_LOADTHUMBNAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kumano.Data.Service.RESPONSE_UPDATECATEGORY))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kumano.Data.Service.RESPONSE_ADDCATEGORY))]
    public partial class RESPONSEAPI_BASE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_FINDARTIFACT", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_FINDARTIFACT : Kumano.Data.Service.RESPONSEAPI_BASE {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.LinkedList<Kumano.Data.Service.DataArtifact> ArtifactsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.LinkedList<Kumano.Data.Service.DataArtifact> Artifacts {
            get {
                return this.ArtifactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtifactsField, value) != true)) {
                    this.ArtifactsField = value;
                    this.RaisePropertyChanged("Artifacts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_GETSERVERVERSION", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_GETSERVERVERSION : Kumano.Data.Service.RESPONSEAPI_BASE {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionText {
            get {
                return this.VersionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionTextField, value) != true)) {
                    this.VersionTextField = value;
                    this.RaisePropertyChanged("VersionText");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_LOADCATGEORY", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_LOADCATGEORY : Kumano.Data.Service.RESPONSEAPI_BASE {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.LinkedList<Kumano.Data.Service.DataCategory> CategoriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.LinkedList<Kumano.Data.Service.DataCategory> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_LOADTHUMBNAIL", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_LOADTHUMBNAIL : Kumano.Data.Service.RESPONSEAPI_BASE {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbnailBytesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ThumbnailBytes {
            get {
                return this.ThumbnailBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailBytesField, value) != true)) {
                    this.ThumbnailBytesField = value;
                    this.RaisePropertyChanged("ThumbnailBytes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_UPDATECATEGORY", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_UPDATECATEGORY : Kumano.Data.Service.RESPONSEAPI_BASE {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_ADDCATEGORY", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_ADDCATEGORY : Kumano.Data.Service.RESPONSEAPI_BASE {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataArtifact", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Serialized")]
    [System.SerializableAttribute()]
    public partial class DataArtifact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifyKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentifyKey {
            get {
                return this.IdentifyKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifyKeyField, value) != true)) {
                    this.IdentifyKeyField = value;
                    this.RaisePropertyChanged("IdentifyKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ThumbnailKey {
            get {
                return this.ThumbnailKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailKeyField, value) != true)) {
                    this.ThumbnailKeyField = value;
                    this.RaisePropertyChanged("ThumbnailKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REQUEST_FINDARTIFACT", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Request")]
    [System.SerializableAttribute()]
    public partial class REQUEST_FINDARTIFACT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kumano.Data.Service.FINDTARGET_SELECTOR TargetTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetId {
            get {
                return this.TargetIdField;
            }
            set {
                if ((this.TargetIdField.Equals(value) != true)) {
                    this.TargetIdField = value;
                    this.RaisePropertyChanged("TargetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kumano.Data.Service.FINDTARGET_SELECTOR TargetType {
            get {
                return this.TargetTypeField;
            }
            set {
                if ((this.TargetTypeField.Equals(value) != true)) {
                    this.TargetTypeField = value;
                    this.RaisePropertyChanged("TargetType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FINDTARGET_SELECTOR", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Construction")]
    public enum FINDTARGET_SELECTOR : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CATEGORY = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VERSION_SELECTOR", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Construction")]
    public enum VERSION_SELECTOR : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SERVICE_VERSION = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DATABASE_VERSION = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        API_VERSION = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REQUEST_LOADARTIFACT", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Request")]
    [System.SerializableAttribute()]
    public partial class REQUEST_LOADARTIFACT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetArtifactIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetArtifactId {
            get {
                return this.TargetArtifactIdField;
            }
            set {
                if ((this.TargetArtifactIdField.Equals(value) != true)) {
                    this.TargetArtifactIdField = value;
                    this.RaisePropertyChanged("TargetArtifactId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESPONSE_LOADARTIFACT", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RESPONSE_LOADARTIFACT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kumano.Data.Service.DataArtifact ArtifactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kumano.Data.Service.DataArtifact Artifact {
            get {
                return this.ArtifactField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtifactField, value) != true)) {
                    this.ArtifactField = value;
                    this.RaisePropertyChanged("Artifact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REQUEST_LOADCATEGORY", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Request")]
    [System.SerializableAttribute()]
    public partial class REQUEST_LOADCATEGORY : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetCategortIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetCategortId {
            get {
                return this.TargetCategortIdField;
            }
            set {
                if ((this.TargetCategortIdField.Equals(value) != true)) {
                    this.TargetCategortIdField = value;
                    this.RaisePropertyChanged("TargetCategortId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REQUEST_LOADTHUMBNAIL", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Request")]
    [System.SerializableAttribute()]
    public partial class REQUEST_LOADTHUMBNAIL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailKey {
            get {
                return this.ThumbnailKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailKeyField, value) != true)) {
                    this.ThumbnailKeyField = value;
                    this.RaisePropertyChanged("ThumbnailKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REQUEST_UPDATECATEGORY", Namespace="http://schemas.datacontract.org/2004/07/Mogami.Service.Request")]
    [System.SerializableAttribute()]
    public partial class REQUEST_UPDATECATEGORY : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IMogamiApiService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IMogamiApiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/AddCategory", ReplyAction="http://tempuri.org/IMogamiApiService/AddCategoryResponse")]
        Kumano.Data.Service.RESPONSE_ADDCATEGORY AddCategory(Kumano.Data.Service.REQUEST_ADDCATEGORY reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/AddCategory", ReplyAction="http://tempuri.org/IMogamiApiService/AddCategoryResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_ADDCATEGORY> AddCategoryAsync(Kumano.Data.Service.REQUEST_ADDCATEGORY reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/FindArtifact", ReplyAction="http://tempuri.org/IMogamiApiService/FindArtifactResponse")]
        Kumano.Data.Service.RESPONSE_FINDARTIFACT FindArtifact(Kumano.Data.Service.REQUEST_FINDARTIFACT reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/FindArtifact", ReplyAction="http://tempuri.org/IMogamiApiService/FindArtifactResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_FINDARTIFACT> FindArtifactAsync(Kumano.Data.Service.REQUEST_FINDARTIFACT reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/GetServerVersion", ReplyAction="http://tempuri.org/IMogamiApiService/GetServerVersionResponse")]
        Kumano.Data.Service.RESPONSE_GETSERVERVERSION GetServerVersion(Kumano.Data.Service.VERSION_SELECTOR versionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/GetServerVersion", ReplyAction="http://tempuri.org/IMogamiApiService/GetServerVersionResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_GETSERVERVERSION> GetServerVersionAsync(Kumano.Data.Service.VERSION_SELECTOR versionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/LoadArtifact", ReplyAction="http://tempuri.org/IMogamiApiService/LoadArtifactResponse")]
        Kumano.Data.Service.RESPONSE_LOADARTIFACT LoadArtifact(Kumano.Data.Service.REQUEST_LOADARTIFACT reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/LoadArtifact", ReplyAction="http://tempuri.org/IMogamiApiService/LoadArtifactResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_LOADARTIFACT> LoadArtifactAsync(Kumano.Data.Service.REQUEST_LOADARTIFACT reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/LoadCategory", ReplyAction="http://tempuri.org/IMogamiApiService/LoadCategoryResponse")]
        Kumano.Data.Service.RESPONSE_LOADCATGEORY LoadCategory(Kumano.Data.Service.REQUEST_LOADCATEGORY reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/LoadCategory", ReplyAction="http://tempuri.org/IMogamiApiService/LoadCategoryResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_LOADCATGEORY> LoadCategoryAsync(Kumano.Data.Service.REQUEST_LOADCATEGORY reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/LoadThumbnail", ReplyAction="http://tempuri.org/IMogamiApiService/LoadThumbnailResponse")]
        Kumano.Data.Service.RESPONSE_LOADTHUMBNAIL LoadThumbnail(Kumano.Data.Service.REQUEST_LOADTHUMBNAIL reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/LoadThumbnail", ReplyAction="http://tempuri.org/IMogamiApiService/LoadThumbnailResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_LOADTHUMBNAIL> LoadThumbnailAsync(Kumano.Data.Service.REQUEST_LOADTHUMBNAIL reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/Login", ReplyAction="http://tempuri.org/IMogamiApiService/LoginResponse")]
        void Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/Login", ReplyAction="http://tempuri.org/IMogamiApiService/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IMogamiApiService/Logout", ReplyAction="http://tempuri.org/IMogamiApiService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IMogamiApiService/Logout", ReplyAction="http://tempuri.org/IMogamiApiService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/UpdateCategory", ReplyAction="http://tempuri.org/IMogamiApiService/UpdateCategoryResponse")]
        Kumano.Data.Service.RESPONSE_UPDATECATEGORY UpdateCategory(Kumano.Data.Service.REQUEST_UPDATECATEGORY reqparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMogamiApiService/UpdateCategory", ReplyAction="http://tempuri.org/IMogamiApiService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_UPDATECATEGORY> UpdateCategoryAsync(Kumano.Data.Service.REQUEST_UPDATECATEGORY reqparam);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMogamiApiServiceChannel : Kumano.Data.Service.IMogamiApiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MogamiApiServiceClient : System.ServiceModel.ClientBase<Kumano.Data.Service.IMogamiApiService>, Kumano.Data.Service.IMogamiApiService {
        
        public MogamiApiServiceClient() {
        }
        
        public MogamiApiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MogamiApiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MogamiApiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MogamiApiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Kumano.Data.Service.RESPONSE_ADDCATEGORY AddCategory(Kumano.Data.Service.REQUEST_ADDCATEGORY reqparam) {
            return base.Channel.AddCategory(reqparam);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_ADDCATEGORY> AddCategoryAsync(Kumano.Data.Service.REQUEST_ADDCATEGORY reqparam) {
            return base.Channel.AddCategoryAsync(reqparam);
        }
        
        public Kumano.Data.Service.RESPONSE_FINDARTIFACT FindArtifact(Kumano.Data.Service.REQUEST_FINDARTIFACT reqparam) {
            return base.Channel.FindArtifact(reqparam);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_FINDARTIFACT> FindArtifactAsync(Kumano.Data.Service.REQUEST_FINDARTIFACT reqparam) {
            return base.Channel.FindArtifactAsync(reqparam);
        }
        
        public Kumano.Data.Service.RESPONSE_GETSERVERVERSION GetServerVersion(Kumano.Data.Service.VERSION_SELECTOR versionType) {
            return base.Channel.GetServerVersion(versionType);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_GETSERVERVERSION> GetServerVersionAsync(Kumano.Data.Service.VERSION_SELECTOR versionType) {
            return base.Channel.GetServerVersionAsync(versionType);
        }
        
        public Kumano.Data.Service.RESPONSE_LOADARTIFACT LoadArtifact(Kumano.Data.Service.REQUEST_LOADARTIFACT reqparam) {
            return base.Channel.LoadArtifact(reqparam);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_LOADARTIFACT> LoadArtifactAsync(Kumano.Data.Service.REQUEST_LOADARTIFACT reqparam) {
            return base.Channel.LoadArtifactAsync(reqparam);
        }
        
        public Kumano.Data.Service.RESPONSE_LOADCATGEORY LoadCategory(Kumano.Data.Service.REQUEST_LOADCATEGORY reqparam) {
            return base.Channel.LoadCategory(reqparam);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_LOADCATGEORY> LoadCategoryAsync(Kumano.Data.Service.REQUEST_LOADCATEGORY reqparam) {
            return base.Channel.LoadCategoryAsync(reqparam);
        }
        
        public Kumano.Data.Service.RESPONSE_LOADTHUMBNAIL LoadThumbnail(Kumano.Data.Service.REQUEST_LOADTHUMBNAIL reqparam) {
            return base.Channel.LoadThumbnail(reqparam);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_LOADTHUMBNAIL> LoadThumbnailAsync(Kumano.Data.Service.REQUEST_LOADTHUMBNAIL reqparam) {
            return base.Channel.LoadThumbnailAsync(reqparam);
        }
        
        public void Login() {
            base.Channel.Login();
        }
        
        public System.Threading.Tasks.Task LoginAsync() {
            return base.Channel.LoginAsync();
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public Kumano.Data.Service.RESPONSE_UPDATECATEGORY UpdateCategory(Kumano.Data.Service.REQUEST_UPDATECATEGORY reqparam) {
            return base.Channel.UpdateCategory(reqparam);
        }
        
        public System.Threading.Tasks.Task<Kumano.Data.Service.RESPONSE_UPDATECATEGORY> UpdateCategoryAsync(Kumano.Data.Service.REQUEST_UPDATECATEGORY reqparam) {
            return base.Channel.UpdateCategoryAsync(reqparam);
        }
    }
}
